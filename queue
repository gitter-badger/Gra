#!/bin/bash

debug=0
listen=1
stop=0
start=1
async=1
output=""
directory=$PWD
artisan="$directory/artisan"

pids=$(/sbin/pidof php)
running=0

if [ "$pids" ]
then
	running=1
fi


while [[ $# > 0 ]]
do

	key="$1"
	
	case $key in
		-l|--listen)
			listen=1
		;;
		-w|--work)
			listen=0
		;;
		-s|--silent)
			output="&>/dev/null"
		;;
		-v|--verbose)
			output=""
		;;
		-o|--output)
			file="$directory/$2"

			if [ ! -e "$file" ]
			then
				echo "File $file doesnt exists."
				touch "$file"
			fi

			output="&>>$file"
		;;
		-a|--async)
			async=1
		;;
		-y|--sync)
			async=0
		;;
		-r|--artisan)
			artisan="$directory/$2"
			shift
		;;
		-g|--log)
			file="$directory/storage/logs/queue.log"

			if [ ! -e "$file" ]
			then
				echo "File $file doesnt exists."
				touch "$file"
			fi

			output="&>>$file"
		;;
		-d|--dir)
			directory="$2"
			shift
		;;
		start)
			start=1
			stop=0
		;;
		stop)
			start=0
			stop=1
		;;
		restart)
			start=1
			stop=1
		;;

		*)
		;;
	esac

	shift
done


if [[ $debug > 0 ]]
then

	echo "PWD: $PWD"
	echo "Artisan: $artisan"
	echo "Directory: $directory"
	echo "Output: $output"
fi



cmd="$artisan queue"

if [[ $listen > 0 ]]
then
	cmd="$cmd:listen"
else
	cmd="$cmd:work"
fi



if [[ $stop > 0 ]]
then
	if [ "$pids" ]
	then

		echo "Stopping queue"
		kill $pids
		running=0
	else

		echo "Nothing to stop"
	fi
fi

if [[ $start > 0 ]]
then
	if [[ $running == 0 ]]
	then

		if [[ $async > 0 ]]
		then

			echo "Starting async queue"
			echo "php $cmd $output &"
			php $cmd $output &
		else


			echo "Starting sync queue"
			echo "php $cmd $output"
			php $cmd $output
		fi

	else

		echo "Already running"
	fi
fi

